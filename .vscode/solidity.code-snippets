{
  "Pure contract": {
    "scope": "solidity",
    "prefix": "sscontractpure",
    "body": [
      "// SPDX-License-Identifier: ${1:MIT}",
      "",
      "pragma solidity 0.8.${2:29};",
      "",
      "contract ${4:Name} {",
      "    // ___ STORAGE _____________________________________________________________________________________________________",
      "",
      "    $5",
      "",
      "    // ___ INITIALIZATION ______________________________________________________________________________________________",
      "",
      "    constructor($6) {$7}",
      "",
      "    // ___ EXTERNAL FUNCTIONS __________________________________________________________________________________________",
      "",
      "    $0",
      "}",
      "",
    ],
    "description": "Prints the sceleton for a contract",
  },
  "Contract with role-based access control": {
    "scope": "solidity",
    "prefix": "sscontract",
    "body": [
      "// SPDX-License-Identifier: ${1:MIT}",
      "",
      "pragma solidity 0.8.${2:29};",
      "",
      "// Developed with OpenZeppelin Contracts 5${3:.3.0}.",
      "import { AccessControl } from \"@openzeppelin/contracts/access/AccessControl.sol\";",
      "",
      "contract ${4:Name} is AccessControl {",
      "    // ___ STORAGE _____________________________________________________________________________________________________",
      "",
      "    $5",
      "",
      "    // ___ INITIALIZATION ______________________________________________________________________________________________",
      "",
      "    constructor(address _defaultAdmin) {",
      "        _grantRole(DEFAULT_ADMIN_ROLE, _defaultAdmin);",
      "    }",
      "",
      "    // ___ EXTERNAL FUNCTIONS __________________________________________________________________________________________",
      "",
      "    $0",
      "}",
      "",
    ],
    "description": "Prints the sceleton for a contract using role-based access control",
  },
  "Ownable contract": {
    "scope": "solidity",
    "prefix": "sscontractownable",
    "body": [
      "// SPDX-License-Identifier: ${1:MIT}",
      "",
      "pragma solidity 0.8.${2:29};",
      "",
      "// Developed with OpenZeppelin Contracts 5${3:.3.0}.",
      "import { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";",
      "",
      "contract ${4:Name} is Ownable {",
      "    // ___ STORAGE _____________________________________________________________________________________________________",
      "",
      "    $5",
      "",
      "    // ___ INITIALIZATION ______________________________________________________________________________________________",
      "",
      "    constructor(address _initialOwner) Ownable(_initialOwner) {}",
      "",
      "    // ___ EXTERNAL FUNCTIONS __________________________________________________________________________________________",
      "",
      "    $0",
      "}",
      "",
    ],
    "description": "Prints the sceleton for an ownable contract",
  },
  "Upgradeable contract with role-based access control": {
    "scope": "solidity",
    "prefix": "ssupgradeable",
    "body": [
      "// SPDX-License-Identifier: ${1:MIT}",
      "",
      "pragma solidity 0.8.${2:29};",
      "",
      "// Developed with OpenZeppelin Contracts 5${3:.3.0}.",
      "import {",
      "    Initializable,",
      "    AccessControlUpgradeable",
      "} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";",
      "",
      "contract ${4:Name} is Initializable, AccessControlUpgradeable {",
      "    // ___ STORAGE _____________________________________________________________________________________________________",
      "",
      "    $5",
      "",
      "    // ___ INITIALIZATION ______________________________________________________________________________________________",
      "",
      "    /// @custom:oz-upgrades-unsafe-allow constructor",
      "    constructor() { _disableInitializers(); } // prettier-ignore",
      "",
      "    function initialize(address _defaultAdmin) external initializer {",
      "        __AccessControl_init();",
      "",
      "        _grantRole(DEFAULT_ADMIN_ROLE, _defaultAdmin);",
      "    }",
      "",
      "    // ___ EXTERNAL FUNCTIONS __________________________________________________________________________________________",
      "",
      "    $0",
      "}",
      "",
    ],
    "description": "Prints the sceleton for an upgradeable contract using role-based access control",
  },
  "Upgradeable ownable contract": {
    "scope": "solidity",
    "prefix": "ssupgradeableownable",
    "body": [
      "// SPDX-License-Identifier: ${1:MIT}",
      "",
      "pragma solidity 0.8.${2:29};",
      "",
      "// Developed with OpenZeppelin Contracts 5${3:.3.0}.",
      "import {",
      "    Initializable,",
      "    OwnableUpgradeable",
      "} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";",
      "",
      "contract ${4:Name} is Initializable, OwnableUpgradeable {",
      "    // ___ STORAGE _____________________________________________________________________________________________________",
      "",
      "    $5",
      "",
      "    // ___ INITIALIZATION ______________________________________________________________________________________________",
      "",
      "    /// @custom:oz-upgrades-unsafe-allow constructor",
      "    constructor() { _disableInitializers(); } // prettier-ignore",
      "",
      "    function initialize(address _initialOwner) external initializer {",
      "        __AccessControl_init();",
      "",
      "        __Ownable_init(_initialOwner);",
      "    }",
      "",
      "    // ___ EXTERNAL FUNCTIONS __________________________________________________________________________________________",
      "",
      "    $0",
      "}",
      "",
    ],
    "description": "Prints the sceleton for an upgradeable ownable contract",
  },
  "Upgradeable pure contract": {
    "scope": "solidity",
    "prefix": "ssupgradeablepure",
    "body": [
      "// SPDX-License-Identifier: ${1:MIT}",
      "",
      "pragma solidity 0.8.${2:29};",
      "",
      "// Developed with OpenZeppelin Contracts 5${3:.3.0}.",
      "import { Initializable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";",
      "",
      "contract ${4:Name} is Initializable {",
      "    // ___ STORAGE _____________________________________________________________________________________________________",
      "",
      "    $5",
      "",
      "    // ___ INITIALIZATION ______________________________________________________________________________________________",
      "",
      "    /// @custom:oz-upgrades-unsafe-allow constructor",
      "    constructor() { _disableInitializers(); } // prettier-ignore",
      "",
      "    function initialize() external initializer {}",
      "",
      "    // ___ EXTERNAL FUNCTIONS __________________________________________________________________________________________",
      "",
      "    $0",
      "}",
      "",
    ],
    "description": "Prints the sceleton for an upgradeable pure contract",
  },
}
